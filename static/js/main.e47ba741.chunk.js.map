{"version":3,"sources":["components/StateProvider.js","components/Footer.js","components/SidebarOption.js","components/Spotify.js","components/Sidebar.js","components/Header.js","components/SongRow.js","components/Body.js","components/Player.js","components/Login.js","App.js","serviceWorker.js","components/reducer.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Footer","spotify","item","token","playing","dispatch","useEffect","getMyCurrentPlaybackState","then","r","console","log","type","is_playing","handlePlayPause","pause","play","className","src","album","images","url","alt","name","artists","map","artist","join","onClick","skipToNext","getMyCurrentPlayingTrack","fontSize","skipToPrevious","Grid","container","spacing","xs","Slider","aria-labelledby","SidebarOption","option","Icon","accessUrl","Sidebar","playlists","HomeIcon","SearchIcon","LibraryMusicIcon","items","playlist","Header","user","placeholder","Avatar","display_name","SongRow","track","playSong","id","Body","discover_weekly","uris","res","description","context_uri","tracks","Player","Login","href","s","SpotifyWebApi","App","hash","window","location","substring","split","reduce","initial","parts","decodeURIComponent","_token","access_token","setAccessToken","getPlaylist","response","getMyTopArtists","top_artists","getMe","getUserPlaylists","Boolean","hostname","match","state","action","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e47ba741.chunk.js","sourcesContent":["import React, {createContext, useContext, useReducer} from 'react';\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({reducer, initialState, children}) => (\r\n\r\n    <StateContext.Provider value = {useReducer(reducer, initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n)\r\nexport const useStateValue = () => useContext (StateContext);","import React, { useEffect, useState } from \"react\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\r\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\";\r\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\r\nimport ShuffleIcon from \"@material-ui/icons/Shuffle\";\r\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\r\nimport VolumeDownIcon from \"@material-ui/icons/VolumeDown\";\r\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\r\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistPlay\";\r\nimport \"./Footer.css\";\r\nimport { Grid, Slider } from \"@material-ui/core\";\r\n\r\nfunction Footer({ spotify }) {\r\n  const [{ token, item, playing }, dispatch] = useStateValue();\r\n\r\n  useEffect(() => {\r\n    spotify.getMyCurrentPlaybackState().then((r) => {\r\n      console.log(r);\r\n\r\n      dispatch({\r\n        type: \"SET_PLAYING\",\r\n        playing: r.is_playing,\r\n      });\r\n\r\n      dispatch({\r\n        type: \"SET_ITEM\",\r\n        item: r.item,\r\n      });\r\n    });\r\n  }, [spotify]);\r\n\r\n  const handlePlayPause = () => {\r\n    if (playing) {\r\n      spotify.pause();\r\n      dispatch({\r\n        type: \"SET_PLAYING\",\r\n        playing: false,\r\n      });\r\n    } else {\r\n      spotify.play();\r\n      dispatch({\r\n        type: \"SET_PLAYING\",\r\n        playing: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  const skipNext = () => {\r\n    spotify.skipToNext();\r\n    spotify.getMyCurrentPlayingTrack().then((r) => {\r\n      dispatch({\r\n        type: \"SET_ITEM\",\r\n        item: r.item,\r\n      });\r\n      dispatch({\r\n        type: \"SET_PLAYING\",\r\n        playing: true,\r\n      });\r\n    });\r\n  };\r\n\r\n  const skipPrevious = () => {\r\n    spotify.skipToPrevious();\r\n    spotify.getMyCurrentPlayingTrack().then((r) => {\r\n      dispatch({\r\n        type: \"SET_ITEM\",\r\n        item: r.item,\r\n      });\r\n      dispatch({\r\n        type: \"SET_PLAYING\",\r\n        playing: true,\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"footer__left\">\r\n        <img\r\n          className=\"footer__albumLogo\"\r\n          src={item?.album.images[0].url}\r\n          alt={item?.name}\r\n        />\r\n        {item ? (\r\n          <div className=\"footer__songInfo\">\r\n            <h4>{item.name}</h4>\r\n            <p>{item.artists.map((artist) => artist.name).join(\", \")}</p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"footer__songInfo\">\r\n            <h4>No song is playing</h4>\r\n            <p>...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"footer__center\">\r\n        <ShuffleIcon className=\"footer__green\" />\r\n        <SkipPreviousIcon onClick={skipNext} className=\"footer__icon\" />\r\n        {playing ? (\r\n          <PauseCircleOutlineIcon\r\n            onClick={handlePlayPause}\r\n            fontSize=\"large\"\r\n            className=\"footer__icon\"\r\n          />\r\n        ) : (\r\n          <PlayCircleOutlineIcon\r\n            onClick={handlePlayPause}\r\n            fontSize=\"large\"\r\n            className=\"footer__icon\"\r\n          />\r\n        )}\r\n        <SkipNextIcon onClick={skipPrevious} className=\"footer__icon\" />\r\n        <RepeatIcon className=\"footer__green\" />\r\n      </div>\r\n      <div className=\"footer__right\">\r\n        <Grid container spacing={2}>\r\n          <Grid item>\r\n            <PlaylistPlayIcon />\r\n          </Grid>\r\n          <Grid item>\r\n            <VolumeDownIcon />\r\n          </Grid>\r\n          <Grid item xs>\r\n            <Slider aria-labelledby=\"continuous-slider\" />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport \"./SidebarOption.css\";\r\n\r\nfunction SidebarOption({ option = \"test\", Icon }) {\r\n  return (\r\n    <div className=\"sidebarOption\">\r\n      {Icon && <Icon className=\"sidebarOption__icon\" />}\r\n      {Icon ? <h4>{option}</h4> : <p>{option}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidebarOption;","// https://developer.spotify.com/documentation/web-playback-sdk/quick-start/#\r\nexport const authEndpoint = \"https://accounts.spotify.com/authorize\";\r\n// Replace with your app's client ID, redirect URI and desired scopes\r\nconst clientId = \"da075c75351546d39f1568078cef4812\";\r\nconst redirectUri = \"http://localhost:3000/\";\r\nconst scopes = [\r\n  \"user-read-currently-playing\",\r\n  \"user-read-recently-played\",\r\n  \"user-read-playback-state\",\r\n  \"user-top-read\",\r\n  \"user-modify-playback-state\",\r\n];\r\n\r\nexport const getTokenFromResponse = () => {\r\n  return window.location.hash\r\n    .substring(1)\r\n    .split(\"&\")\r\n    .reduce((initial, item) => {\r\n      var parts = item.split(\"=\");\r\n      initial[parts[0]] = decodeURIComponent(parts[1]);\r\n\r\n      return initial;\r\n    }, {});\r\n};\r\n\r\nexport const accessUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\r\n  \"%20\"\r\n)}&response_type=token&show_dialog=true`;","import React from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport SidebarOption from \"./SidebarOption\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport LibraryMusicIcon from \"@material-ui/icons/LibraryMusic\";\r\nimport { getTokenFromResponse } from \"./Spotify\";\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nfunction Sidebar() {\r\n  const [{ playlists }, dispatch] = useStateValue();\r\n  console.log(playlists);\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <img\r\n        className=\"sidebar__logo\"\r\n        src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\"\r\n        alt=\"\"\r\n      />\r\n      <SidebarOption Icon={HomeIcon} option=\"Home\" />\r\n      <SidebarOption Icon={SearchIcon} option=\"Search\" />\r\n      <SidebarOption Icon={LibraryMusicIcon} option=\"Your Library\" />\r\n      <br />\r\n      <strong className=\"sidebar__title\">PLAYLISTS</strong>\r\n      <hr />\r\n      {playlists?.items?.map((playlist) => (\r\n        <SidebarOption option={playlist.name} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;","import React from \"react\";\r\nimport \"./Header.css\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { useEffect } from \"react\";\r\n\r\nfunction Header({ spotify }) {\r\n  const [{ user }, dispatch] = useStateValue();\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header__left\">\r\n        <SearchIcon />\r\n        <input\r\n          placeholder=\"Search for Artists, Songs, or Podcasts \"\r\n          type=\"text\"\r\n        />\r\n      </div>\r\n      <div className=\"header__right\">\r\n        <Avatar alt={user?.display_name} src={user?.images[0].url} />\r\n        <h4>{user?.display_name}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"./SongRow.css\";\r\n\r\nfunction SongRow({ track, playSong }) {\r\n  console.log(track);\r\n  return (\r\n    <div className=\"songRow\" onClick={() => playSong(track.id)}>\r\n      <img className=\"songRow__album\" src={track.album.images[0].url} alt=\"\" />\r\n      <div className=\"songRow__info\">\r\n        <h1>{track.name}</h1>\r\n        <p>\r\n          {track.artists.map((artist) => artist.name).join(\", \")} -{\" \"}\r\n          {track.album.name}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SongRow;","import React from \"react\";\r\nimport \"./Body.css\";\r\nimport Header from \"./Header\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport SongRow from \"./SongRow\";\r\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\n\r\nfunction Body({ spotify }) {\r\n  const [{ discover_weekly }, dispatch] = useStateValue();\r\n\r\n  const playPlaylist = (id) => {\r\n    spotify\r\n      .play({\r\n        context_uri: `spotify:playlist:5JSv6vn8ssE9cmDkxCpvGp`,\r\n      })\r\n      .then((res) => {\r\n        spotify.getMyCurrentPlayingTrack().then((r) => {\r\n          dispatch({\r\n            type: \"SET_ITEM\",\r\n            item: r.item,\r\n          });\r\n          dispatch({\r\n            type: \"SET_PLAYING\",\r\n            playing: true,\r\n          });\r\n        });\r\n      });\r\n  };\r\n\r\n  const playSong = (id) => {\r\n    spotify\r\n      .play({\r\n        uris: [`spotify:track:${id}`],\r\n      })\r\n      .then((res) => {\r\n        spotify.getMyCurrentPlayingTrack().then((r) => {\r\n          dispatch({\r\n            type: \"SET_ITEM\",\r\n            item: r.item,\r\n          });\r\n          dispatch({\r\n            type: \"SET_PLAYING\",\r\n            playing: true,\r\n          });\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"body\">\r\n      <Header spotify={spotify} />\r\n\r\n      <div className=\"body__info\">\r\n        <img src={discover_weekly?.images[0].url} alt=\"\" />\r\n        <div className=\"body__infoText\">\r\n          <strong>PLAYLIST</strong>\r\n          <h2>Discover Weekly</h2>\r\n          <p>{discover_weekly?.description}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"body__songs\">\r\n        <div className=\"body__icons\">\r\n          <PlayCircleFilledIcon\r\n            className=\"body__shuffle\"\r\n            onClick={playPlaylist}\r\n          />\r\n          <FavoriteIcon fontSize=\"large\" />\r\n          <MoreHorizIcon />\r\n        </div>\r\n\r\n        {discover_weekly?.tracks.items.map((item) => (\r\n          <SongRow playSong={playSong} track={item.track} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Body;","import React from \"react\";\r\nimport Footer from \"./Footer\";\r\nimport \"./Player.css\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Body from \"./Body\";\r\n\r\nfunction Player({ spotify }) {\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"player__body\">\r\n        <Sidebar />\r\n        <Body spotify={spotify} />\r\n      </div>\r\n      <Footer spotify={spotify} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Player;","import React from \"react\";\r\nimport \"./Login.css\";\r\nimport { accessUrl } from \"./Spotify\";\r\n\r\nfunction Login() {\r\n  return (\r\n    <div className=\"login\">\r\n      <img\r\n        src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\"\r\n        alt=\"\"\r\n      />\r\n      <a href={accessUrl}>LOGIN TO SPOTIFY</a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;","import React, { useEffect } from \"react\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport { useStateValue } from \"./components/StateProvider\";\nimport Player from \"./components/Player\";\nimport { getTokenFromResponse } from \"./components/Spotify\";\nimport \"./App.css\";\nimport Login from \"./components/Login\";\n\nconst s = new SpotifyWebApi();\n\nfunction App() {\n  const [{ token }, dispatch] = useStateValue();\n\n  useEffect(() => {\n    // Set token\n    const hash = getTokenFromResponse();\n    window.location.hash = \"\";\n    let _token = hash.access_token;\n\n    if (_token) {\n      s.setAccessToken(_token);\n\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      });\n\n      s.getPlaylist(\"5JSv6vn8ssE9cmDkxCpvGp\").then((response) =>\n        dispatch({\n          type: \"SET_DISCOVER_WEEKLY\",\n          discover_weekly: response,\n        })\n      );\n\n      s.getMyTopArtists().then((response) =>\n        dispatch({\n          type: \"SET_TOP_ARTISTS\",\n          top_artists: response,\n        })\n      );\n\n      dispatch({\n        type: \"SET_SPOTIFY\",\n        spotify: s,\n      });\n\n      s.getMe().then((user) => {\n        dispatch({\n          type: \"SET_USER\",\n          user,\n        });\n      });\n\n      s.getUserPlaylists().then((playlists) => {\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists,\n        });\n      });\n    }\n  }, [token, dispatch]);\n\n  return (\n    <div className=\"app\">\n      {!token && <Login />}\n      {token && <Player spotify={s} />}\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const initialState = {\r\n  user: null,\r\n  playlists: [],\r\n  spotify: null,\r\n  discover_weekly: null,\r\n  top_artists: null,\r\n  playing: false,\r\n  item: null,\r\n};\r\n\r\nexport const reducer = (state, action) => {\r\n  console.log(action);\r\n  switch (action.type) {\r\n    case \"SET_USER\":\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n      };\r\n\r\n    case \"SET_PLAYING\":\r\n      return {\r\n        ...state,\r\n        playing: action.playing,\r\n      };\r\n\r\n    case \"SET_ITEM\":\r\n      return {\r\n        ...state,\r\n        item: action.item,\r\n      };\r\n\r\n    case \"SET_DISCOVER_WEEKLY\":\r\n      return {\r\n        ...state,\r\n        discover_weekly: action.discover_weekly,\r\n      };\r\n\r\n    case \"SET_TOP_ARTISTS\":\r\n      return {\r\n        ...state,\r\n        top_artists: action.top_artists,\r\n      };\r\n\r\n    case \"SET_TOKEN\":\r\n      return {\r\n        ...state,\r\n        token: action.token,\r\n      };\r\n\r\n    case \"SET_SPOTIFY\":\r\n      return {\r\n        ...state,\r\n        spotify: action.spotify,\r\n      };\r\n\r\n    case \"SET_PLAYLISTS\":\r\n      return {\r\n        ...state,\r\n        playlists: action.playlists,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { StateProvider} from './components/StateProvider';\nimport {initialState, reducer} from './components/reducer';\n\nReactDOM.render(\n  <React.StrictMode>\n  <StateProvider initialState = {initialState} reducer = {reducer}>\n  <App />\n  </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}